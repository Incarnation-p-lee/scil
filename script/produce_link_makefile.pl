#!/usr/bin/perl
use strict;
use warnings;
use 5.010;

my $out_dir = shift @ARGV;
my $module = shift @ARGV;
my $binary_dir = "$out_dir/../bin";
my %module_obj_map;

if (not $out_dir or not  $module) {
    say "Invalid option for script.";
    exit 1;
}

$module_obj_map{"tkz"} =
    "common.o log.o test.o token.o finite_automata.o " .
    "nfa.o regular.o tokenizer.o libds.a";
$module_obj_map{"parser"} =
    "common.o log.o test.o parser.o nfa.o regular.o " .
    "libds.a";

&produce_link_makefile($module);

sub produce_link_makefile {
    my $name;
    my $makefile;
    my $makefile_name;

    $name = shift @_;
    $makefile_name = "$out_dir/Makefile.$name";

    open $makefile, '>', "$makefile_name" or
        die "Failed to create makefile, $?\n";

    printf $makefile "# Automaticaly generated by $0.\n\n";
    printf $makefile "include Makefile.in\n\n";
    printf $makefile "TARGET=$name.elf\n\n";
    printf $makefile 'all:$(TARGET)' ."\n\n";
    printf $makefile '$(TARGET):' . "$module_obj_map{$name}\n";
    printf $makefile "\t" . '$(LD) $(LFLAG) -o $@ $? $(LD_LIBRARY)' . "\n";
    printf $makefile "\t" . "cp \$(TARGET) $binary_dir" . "\n\n";

    close $makefile;
}

